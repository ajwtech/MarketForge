# /etc/nginx/conf.d/fastcgi-php-nginx.conf
# regex to split $uri to $fastcgi_script_name and $fastcgi_path
fastcgi_split_path_info ^(.+\.php)(/.+)$;


# Bypass the fact that try_files resets $fastcgi_path_info
# see: http://trac.nginx.org/nginx/ticket/321
set             $path_info $fastcgi_path_info;
fastcgi_param   PATH_INFO $path_info;

# DONE: investigate which check is prefered. IfIsEvil.
# Check that the PHP script exists before passing it
try_files       $fastcgi_script_name =404;

include         /etc/nginx/conf.d/fastcgi-params.conf;
fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name;

# Mitigate https://httpoxy.org/ vulnerabilities
fastcgi_param   HTTP_PROXY "";
fastcgi_param PATH_INFO $fastcgi_path_info;
fastcgi_index   index.php;
fastcgi_read_timeout 300s;
fastcgi_send_timeout 300s;
fastcgi_pass ${MAUTIC_WEB_URL}:9000;
access_log /var/log/nginx/php_access.log;
error_log /var/log/nginx/php_error.log debug;


#   [Setting Nginx FastCGI response buffer sizes](http://bit.ly/nginx_fastcgi_buffers)
fastcgi_buffers              128 4k;  # Modified number at default size.
#   Do NOT change buffer_size. See Gist.  # Current $fastcgi_buffers directive ..
#   fastcgi_buffer_size      4k;      # ... sets this to 512k
fastcgi_busy_buffers_size    8k;      # default=2 x buffers
fastcgi_max_temp_file_size   1024m;   # written in **$fastcgi_temp_file_write_size** chunks
fastcgi_temp_file_write_size 32k;     # default=2 x buffers
