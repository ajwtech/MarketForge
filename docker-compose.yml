x-mautic-volumes:
  &mautic-volumes
  - ./mautic/config:/var/www/html/config:z
  - ./mautic/logs:/var/www/html/var/logs:z
  - ./mautic/media/files:/var/www/html/media/files:z
  - ./mautic/media/images:/var/www/html/media/images:z
  - ./cron:/opt/mautic/cron:z
  - mautic:/var/www/html:z

services:
  mysql:
    build:
      context: .
      dockerfile: Dockerfile.mysql
      args:
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-password}
        MYSQL_ROOT_HOST: ${MYSQL_ROOT_HOST-'%'}
        DB_NAME: ${DB_NAME:-mauticdb}
        DB_USER: ${DB_USER:-root}
        DB_PASSWORD: ${DB_PASSWORD:-password}
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-password}
      MYSQL_ROOT_HOST: ${MYSQL_ROOT_HOST:-'%'}
      DB_NAME: ${DB_NAME:-mauticdb}
      DB_USER: ${DB_USER:-root}
      DB_PASSWORD: ${DB_PASSWORD:-password}
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - default

  nginx:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - mautic:/var/www/html:z
    depends_on:
      - mautic_web
    ports:
      - 8002:80
    networks:
      - default

  mautic_web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_ENV: ${APP_ENV:-prod}
        DB_HOST: ${DB_HOST:-mysql}
        DB_PORT: ${DB_PORT:-3306}
        DB_NAME: ${DB_NAME:-mauticdb}
        DB_USER: ${DB_USER:-root}
        DB_PASSWORD: ${DB_PASSWORD:-password}
        APP_SECRET: ${APP_SECRET:-defaultsecret}
    volumes: *mautic-volumes
    environment:
      DOCKER_MAUTIC_LOAD_TEST_DATA: ${DOCKER_MAUTIC_LOAD_TEST_DATA}
      DOCKER_MAUTIC_RUN_MIGRATIONS: ${DOCKER_MAUTIC_RUN_MIGRATIONS}
      COMPOSE_PROJECT_NAME: marketing
      COMPOSE_NETWORK: ${COMPOSE_PROJECT_NAME}-docker
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      APP_ENV: prod
      APP_DEBUG: 0
      DOCKER_MAUTIC_ROLE: mautic_web
      APP_SECRET: ${APP_SECRET}
    depends_on:
      - mysql
    env_file:
      - .mautic_env
    healthcheck:
      test: cgi-fcgi -bind -connect 127.0.0.1:9000
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 100
    networks:
      - default

  mautic_cron:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_ENV: ${APP_ENV:-prod}
        DB_HOST: ${DB_HOST:-mysql}
        DB_PORT: ${DB_PORT:-3306}
        DB_NAME: ${DB_NAME:-mauticdb}
        DB_USER: ${DB_USER:-root}
        DB_PASSWORD: ${DB_PASSWORD:-password}
        APP_SECRET: ${APP_SECRET:-defaultsecret}
    volumes: *mautic-volumes
    environment:
      DOCKER_MAUTIC_LOAD_TEST_DATA: ${DOCKER_MAUTIC_LOAD_TEST_DATA}
      DOCKER_MAUTIC_RUN_MIGRATIONS: ${DOCKER_MAUTIC_RUN_MIGRATIONS}
      COMPOSE_PROJECT_NAME: marketing
      COMPOSE_NETWORK: ${COMPOSE_PROJECT_NAME}-docker
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      APP_ENV: prod
      APP_DEBUG: 0
      DOCKER_MAUTIC_ROLE: mautic_cron
    env_file:
      - .mautic_env
    depends_on:
      mautic_web:
        condition: service_healthy
    networks:
      - default

  mautic_worker:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_ENV: ${APP_ENV:-prod}
        DB_HOST: ${DB_HOST:-mysql}
        DB_PORT: ${DB_PORT:-3306}
        DB_NAME: ${DB_NAME:-mauticdb}
        DB_USER: ${DB_USER:-root}
        DB_PASSWORD: ${DB_PASSWORD:-password}
        APP_SECRET: ${APP_SECRET:-defaultsecret}
    volumes: *mautic-volumes
    environment:
      DOCKER_MAUTIC_LOAD_TEST_DATA: ${DOCKER_MAUTIC_LOAD_TEST_DATA}
      DOCKER_MAUTIC_RUN_MIGRATIONS: ${DOCKER_MAUTIC_RUN_MIGRATIONS}
      COMPOSE_PROJECT_NAME: marketing
      COMPOSE_NETWORK: ${COMPOSE_PROJECT_NAME}-docker
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      APP_ENV: prod
      APP_DEBUG: 0
      DOCKER_MAUTIC_ROLE: mautic_worker
    env_file:
      - .mautic_env
    depends_on:
      mautic_web:
        condition: service_healthy
    networks:
      - default

volumes:
  mysql-data:
  mautic:
  mautic-volumes:


networks:
  default:
    name: ${COMPOSE_PROJECT_NAME}-docker